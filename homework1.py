#!/usr/bin/env python
# coding: utf-8

# # Домашнє завдання до теми "Python Basics"
# В цьому ДЗ важливою умовою виконання завдань є те, що ми не імпортуємо жодних бібліотек, а робимо все на чистому Python, використовуючи лише базовий функціонал. Це необхідно аби відпрацювати роботу з базовими типами даних. А використовувати бібліотеки ми ще навчимось далі :)

# ## Робота з числами та арифметичними операторами

# 1.Створіть змінну, яка буде зберігати кількість яблук. І надайте їй значення 5. Виведіть значення змінної на екран.

# In[84]:


#applequantity
apl=5


# 2.Виведіть тип змінної, створеної в завданні (1).

# In[85]:


int=apl


# 3.Додайте до значення змінної, створеної в завданні (1) число `12` і виведіть результат на екран з допомогою команди `print()`.

# In[86]:


print(apl+12)


# 4.Створіть змінні `a`, `b`, `c` та `d`, задайте їм значення відповідно 101, 210, 111, 402, та обчисліть з допомогою Python наступний вираз:  $$ \frac{(a+b) * c}{d} $$
# 
# **Важливо**: тут ми маємо обчислити значення саме з використанням змінних, а не просто чисел, як би ми робили у калькуряторі. Змінні потрібні аби за бажання ми могли змінити їх значення та не переписувати код обчислення виразу, бо він буде працювати для різних значень змінних.

# In[87]:


a=101
b=210
c=111
d=402

((a+b)*c)/d


# Очікувана відповідь: 85.8731343283582

# 5.Якою буде остача від ділення числа 11283 на 89? Обчисліть з допомогою Python.

# In[88]:


11283%89


# 6.Скільки цілих разів поміститься число 89 в 11283? (Або що те саме: який буде результат цілочисельного ділення 11283 на 89?)

# In[89]:


11283//89


# # Робота з рядками

# 7.Запишіть у змінну `name` ваше імʼя.

# In[90]:


name="Maksym"


# 8.Запишіть у змінну `surname` ваше прізвище.

# In[91]:


surname="Kyslyi"


# 9.Сконкатенуйте імʼя та прізвище в одну фразу через пробіл. Запишіть результат у нову змінну `name_surname` та виведіть результат на екран.  

# In[92]:


name_surname=(name+" "+surname)
print (name_surname)


# Очікувана відповідь (тільки з вашими даними): 'Hanna Pylieva' 

# 10.Зробіть усі літери змінної `name_surname` заглавними використовуючи метод рядків в Python:

# In[93]:


print(name_surname.upper())


# Очікувана відповідь (тільки з вашими даними): 'HANNA PYLIEVA'

# 11.Виведіть третю літеру вашого `name_surname`. Тут уважно, треба саме третя літера. Згадайте, з якого значення починається індексування значень в Python.

# In[94]:


name_surname [2]


# Очікувана відповідь (тільки з вашими даними): 'n'

# 12.Виведіть першу та останню літеру вашого прізвища.

# In[111]:


"""len(name_surname)"""
"""12"""
name_surname [0],name_surname[12]


# Очікувана відповідь (тільки з вашими даними): ('P', 'a')

# 13.Виведіть довжину вашого прізвища.

# In[96]:


len (surname)


# Очікувана відповідь (тільки з вашими даними): 7

# 14.Виведіть кількість літер `a` у столиці Мадагаскару `Antananarivo`. Важливо врахувати всі літери, як великі, так і маленькі.

# In[97]:


"""Antananarivo".count("a")+"Antananarivo".count("A")"""
name = "Antananarivo"
name = name.lower()
name.lower()

"Antananarivo".lower().count("a")
#я не знаю як це так вийшло, але цей варіант коштував більше години часу і вийшло!!!


# Очікувана відповідь: 4

# 15.Створіть рядок `my_string` зі значенням: "The quick brown fox jumps over the lazy dog!!!".   
# Перевірте, чи починається рядок `my_string` з "The" і чи закінчується він "dog!". Виведіть результати на екран.

# In[98]:


my_string ="The quick brown fox jumps over the lazy dog!!!"
print(my_string.startswith("The"))
print(my_string.endswith("dog!"))
""""print(my_string.endswith("dog!!!"))"""


# 16.Розділіть рядок `my_string` на список слів, а потім з'єднайте всі слова через нижнє підкреслювання. Виведіть результат на екран.

# In[99]:


""""my_string".split(' ')"""
"""_".join(my_string)"""
print(my_string.replace(' ',('_')))


# Очікуваний результат: `The_quick_brown_fox_jumps_over_the_lazy_dog!!!`

# # Робота зі колекціями

# У нас є наступний список:

# In[100]:


my_list = [
    78, 12, 14, 27, 47, 28, 51, 46, 94, 37, 42, 20, 52, 33, 11, 11, 51,
    20, 81, 54, 86, 51, 38, 42, 49, 99, 76, 17,  9, 23, 97, 29, 29, 63,
    40, 11, 31, 76, 15, 21, 29, 75, 35,  2, 10, 71, 17, 10, 13,  7, 44,
    12, 19, 61, 13, 25, 62, 46, 10, 44, 75, 57, 20, 57,  3, 44, 16, 28,
    79, 57, 62, 70, 95,  8, 47, 82, 80, 45, 36, 44, 79, 95, 73, 42, 29,
    83, 80, 66, 56,  8, 73,  5, 99, 65, 65, 98, 17, 36, 16, 60
]


# Будемо з ним працювати в наступних завданнях.

# 17.Виведіть 5 перших елементів списку `my_list` з допомогою слайсингу.

# In[101]:


my_list = [
    78, 12, 14, 27, 47, 28, 51, 46, 94, 37, 42, 20, 52, 33, 11, 11, 51,
    20, 81, 54, 86, 51, 38, 42, 49, 99, 76, 17,  9, 23, 97, 29, 29, 63,
    40, 11, 31, 76, 15, 21, 29, 75, 35,  2, 10, 71, 17, 10, 13,  7, 44,
    12, 19, 61, 13, 25, 62, 46, 10, 44, 75, 57, 20, 57,  3, 44, 16, 28,
    79, 57, 62, 70, 95,  8, 47, 82, 80, 45, 36, 44, 79, 95, 73, 42, 29,
    83, 80, 66, 56,  8, 73,  5, 99, 65, 65, 98, 17, 36, 16, 60]
my_list[:5]


# Очікувана відповідь: [78, 12, 14, 27, 47]

# 18.Виведіть 3 останніх елементи списку `my_list` з допомогою слайсингу.

# In[102]:


my_list[-3:]


# 19.Виведіть максимальний і мінімальний елемент у списку. Сформуйте відповідь у наступному форматі
# ```
# Max element  <число>
# Max element  <число>
# ```

# In[103]:


my_list
#print(name_surname.upper())  
print ("Min element",max(my_list))
print ("Max element", min(my_list))


# Очікувана відповідь: 
# 
# ```
# Max element  99
# Max element  2
# ```

# 20.Створіть новий список `my_list_2`, який містить кожен 11-й елемент списку `my_list`. Виведіть `my_list_2` на екран.  
# Памʼятаємо, що перший з "кожного одинадцятого улементу" списку має індекс 10.
# Це завдання можна виконати як з використанням циклів, так і з використанням слайсингу.

# In[104]:


my_list = [
    78, 12, 14, 27, 47, 28, 51, 46, 94, 37, 42, 20, 52, 33, 11, 11, 51,
    20, 81, 54, 86, 51, 38, 42, 49, 99, 76, 17,  9, 23, 97, 29, 29, 63,
    40, 11, 31, 76, 15, 21, 29, 75, 35,  2, 10, 71, 17, 10, 13,  7, 44,
    12, 19, 61, 13, 25, 62, 46, 10, 44, 75, 57, 20, 57,  3, 44, 16, 28,
    79, 57, 62, 70, 95,  8, 47, 82, 80, 45, 36, 44, 79, 95, 73, 42, 29,
    83, 80, 66, 56,  8, 73,  5, 99, 65, 65, 98, 17, 36, 16, 60]
my_list_2=my_list[10::11]
display(my_list_2)


# Очікуваний результат: `[42, 51, 29, 2, 13, 44, 80, 66, 16]`

# ## ВИ - МОЛОДЕЦЬ! ЗРОБИЛИ 20 ЗАВДАНЬ!
# Далі завдання будуть трохи складніше. Деколи в завданнях треба буде написати цикл або list comprehension. Але я впевнена, що у Вас все вийде!

# 21.Створіть новий список `my_list_2_squared`, де кожен елемент списку `my_list_2` є піднесеним до степіня 2. 

# In[105]:


s=2
my_list_2_squared = [x**2 for x in my_list_2]
display (my_list_2_squared)


# Очікуваний результат: `[1764, 2601, 841, 4, 169, 1936, 6400, 4356, 256]`

# 22.Знайдіть суму всіх елементів списку `my_list_2` та виведіть її на екран.

# In[106]:


sumlist=sum(my_list_2)
print(sumlist)


# In[107]:


###23.Знайдіть середнє значення елементів списку `my_list_2`, збережіть результат у змінну `my_list_2_mean`. Виведіть новостворену змінну та ії тип на екран.\n",
###"**Підказка**: середнє значення - це сума елементів поділена на їх кількість. А кількість елементів в списку - це його довжина."
###a = "Hello, World!"
###print(len(a))
len(my_list_2)
my_list_2_mean = sumlist/len(my_list_2)
print (my_list_2_mean)


# In[112]:


###Створіть новий список `my_list_2_gt_mean`, за наступним правилом: 
###"якщо цей елемент спиcку `my_list_2` є більше за `my_list_2_mean`
###то запишемо 1, інакше 0. Виведіть новий список на екран.
###Очікуваний результат: `[1, 1, 0, 0, 0, 1, 1, 1, 0]`"

"""print (my_list_2)
print(my_list_2_mean)
[42, 51, 29, 2, 13, 44, 80, 66, 16]
38.111111111111114 """


"""for x in my_list_2:
    if x < my_list_2_mean:
        print(0)
    else:
        print(1)"""


"""
my_list_2_gt_mean = x
for x in my_list_2:
    if x < my_list_2_mean:
        print(0)
    else:
        print(1)"""
        
for x in my_list_2:
    if x < my_list_2_mean:
        print(0)
    else:
        print(1)
        
        
        


# 25.Чи є в списку `my_list` елементи, які повторюються? Перевірте це програмно і з допомогою інструкцій `if ... else` виведіть на екран відповідь "Так, є елементи, які повторюються", або "Ні, всі елементи унікальні".
# Важливо це зробити без використання імпортів будь-яких бібліотек, на чистому Python так би мовити.

# In[204]:


### for x in fruits:
###    if "a" in x:
###       newlist.append(x)
"""new_list_duplicates=[]
for x in new_list:
   if new_list.count(2) in x:
       new_list_duplicates.append(1)"""
"""my_list
for my_list_dupl in my_list:
          if my_list_dupl =1:
            count+=1
       print(my_list_dupl)"""



my_list = [
   78, 12, 14, 27, 47, 28, 51, 46, 94, 37, 42, 20, 52, 33, 11, 11, 51,
   20, 81, 54, 86, 51, 38, 42, 49, 99, 76, 17,  9, 23, 97, 29, 29, 63,
   40, 11, 31, 76, 15, 21, 29, 75, 35,  2, 10, 71, 17, 10, 13,  7, 44,
   12, 19, 61, 13, 25, 62, 46, 10, 44, 75, 57, 20, 57,  3, 44, 16, 28,
   79, 57, 62, 70, 95,  8, 47, 82, 80, 45, 36, 44, 79, 95, 73, 42, 29,
   83, 80, 66, 56,  8, 73,  5, 99, 65, 65, 98, 17, 36, 16, 60]
duplicates =[]
for element_dupl in my_list:
   if my_list.count(element_dupl) > 1:
       break 
print("Так, є елементи, які повторюються")


# 26.Для кожного унікального елементу списку `my_list` знайдіть, скільки разів він повторюється, та запишіть сукупний результат для всіх елементів (тобто скільки разів повторюється кожен елемент) у змінну `n_repeats`. Виведіть `n_repeats` на екран. 
# 
# **Підказка**: `n_repeats` матиме тип "словник". Порядок ключів в словнику не має значення! Тобто ключі в словнику не обовʼязково мають бути в тому ж порядку, як наведено в прикладі результату. Але кількості зустрічань для кожного елемента мають співпадати з наведеними. 

# In[ ]:





# Очікуваний результат (три крапки - для скорочення, у вас буде виведений повний набір унікальних елементів): 
# ```
# {2: 1, 3: 1, 5: 1, 7: 1, 8: 2, 9: 1, 10: 3, 11: 3, 12: 2, 13: 2, 14: 1, 15: 1, 16: 2, 17: 3, 19: 1, 20: 3, 21: 1, 23: 1, 25: 1, 27: 1, 28: 2, 29: 4, 31: 1, 33: 1, 35: 1, 36: 2, 37: 1, 38: 1, 40: 1, 42: 3, 44: 4, 45: 1, 46: 2, 47: 2, 49: 1, 51: 3, 52: 1, 54: 1, 56: 1, 57: 3, 60: 1, 61: 1, 62: 2, 63: 1, 65: 2, 66: 1, 70: 1, 71: 1, 73: 2, 75: 2, 76: 2, 78: 1, 79: 2, 80: 2, 81: 1, 82: 1, 83: 1, 86: 1, 94: 1, 95: 2, 97: 1, 98: 1, 99: 2}
# ```

# 27.Знайдіть три найменші **унікальні** елементи в списку `my_list`. Збережіть знайдені елементи в змінну `least_3_my_list`. Виведіть значення змінної `least_3_my_list` на екран.

# In[205]:


sorted(my_list)
print(sorted(my_list)[0:3])


# Очікувана відповідь: [2, 3, 5]
# 

# # Ураа!! Ви завершили перше домашнє завдання!!!  
# Аби здати ДЗ - залийте ноутбук у гітхаб репозиторій, який ви створили у перші дні навчання на курсі, та додайте посилання на файл у відповідному завданні в Eduflow.
# Так тримати! 🚀🚀🚀

# In[1]:


print('Ура!')


# In[ ]:




